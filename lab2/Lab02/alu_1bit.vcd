$date
	Sun Apr 03 13:00:07 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_1bit_tb $end
$var wire 1 ! sum $end
$var wire 1 " carry $end
$var reg 1 # Ainvert $end
$var reg 1 $ Binvert $end
$var reg 1 % a $end
$var reg 1 & b $end
$var reg 1 ' cin $end
$var reg 1 ( less $end
$var reg 2 ) operation [1:0] $end
$scope module UUT $end
$var wire 1 # Ainvert $end
$var wire 1 $ Binvert $end
$var wire 1 * and_o $end
$var wire 1 ' cin $end
$var wire 1 ( less $end
$var wire 2 + operation [1:0] $end
$var wire 1 , or_o $end
$var wire 1 % src1 $end
$var wire 1 & src2 $end
$var wire 1 - sum_o $end
$var wire 1 . result3 $end
$var wire 1 / result2 $end
$var wire 1 0 result1 $end
$var reg 1 " cout $end
$var reg 1 ! result $end
$scope module MUX1 $end
$var wire 1 # select $end
$var wire 1 % src1 $end
$var wire 1 1 src2 $end
$var reg 1 0 result $end
$upscope $end
$scope module MUX2 $end
$var wire 1 $ select $end
$var wire 1 & src1 $end
$var wire 1 2 src2 $end
$var reg 1 / result $end
$upscope $end
$scope module MUX3 $end
$var wire 2 3 select [1:0] $end
$var wire 1 * src1 $end
$var wire 1 , src2 $end
$var wire 1 - src3 $end
$var wire 1 ( src4 $end
$var reg 1 . result $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
02
01
10
1/
1.
0-
1,
b0 +
1*
b0 )
0(
0'
1&
1%
0$
0#
1"
1!
$end
#21000
b1 )
b1 +
b1 3
#42000
1-
b10 )
b10 +
b10 3
1'
#63000
